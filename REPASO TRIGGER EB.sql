-- TABLAS:


CREATE TABLE motos_eb (
    id_moto NUMBER PRIMARY KEY,
    marca VARCHAR2(50),
    modelo VARCHAR2(50),
    precio NUMBER,
    stock NUMBER
);


CREATE TABLE auditoria_motos_eliminadas (
    id_eliminacion NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_moto NUMBER,
    marca VARCHAR2(50),
    modelo VARCHAR2(50),
    fecha_eliminacion DATE DEFAULT SYSDATE
);



INSERT INTO motos_eb VALUES (3, 'Kawasaki', 'Ninja 400', 6500, 8);


-- |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


-- EJERCIO 1: Cada vez que se inserte una nueva moto en motos_eb, queremos asegurarnos de que su precio no sea menor a 1000 y su stock no sea negativo.


CREATE OR REPLACE TRIGGER trg_validar_motos
BEFORE INSERT OR UPDATE ON motos_eb
FOR EACH ROW

BEGIN

    -- Si el precio es menor a 1000, se ajusta a 1000

    IF :NEW.precio < 1000 THEN
        :NEW.precio := 1000;
    END IF;

    -- Si el stock es negativo, lo ajustamos a 0
    IF :NEW.stock < 0 THEN
        :NEW.stock := 0;

    END IF;

END;





-- COMPROBAR:


INSERT INTO motos_eb VALUES (1, 'Yamaha', 'R3', 5000, 10); -- NO REALIZA CAMBIOS EN LA INSERCCION.


INSERT INTO motos_eb VALUES (2, 'Honda', 'CB500', 800, -5); -- SI REALIZA CAMBIOS EN LA INSERCCION.




-- ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||



-- EJERCICIO 2: Cada vez que se elimine una moto de la tabla motos_eb, queremos registrar la eliminación en una tabla de auditoría llamada auditoria_motos_eliminadas. 
-- Esta tabla debe almacenar la id de la moto, marca, modelo, y fecha de eliminación.


CREATE OR REPLACE TRIGGER trg_auditoria_eliminacion_motos
BEFORE DELETE ON motos_eb
FOR EACH ROW

BEGIN

    -- (Insertar en la tabla de auditoría antes de eliminar)

    INSERT INTO auditoria_motos_eliminadas (id_moto, marca, modelo)
    VALUES (:OLD.id_moto, :OLD.marca, :OLD.modelo);

END;



-- COMPROBAR:

DELETE FROM motos_eb WHERE id_moto = 2;





